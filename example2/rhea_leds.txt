04/04/18
 

Using myhdl, rhea, icestorm, arachne-pnr, and yosys 

/home/pi/rhea/examples/build/
python ex_catboard.py
/usr/local/lib/python2.7/dist-packages/myhdl-1.0.dev0-py2.7.egg/myhdl/conversion/_toVerilog.py:327: ToVerilogWarning: Signal is driven but not read: reset
  category=ToVerilogWarning
   removing iceriver/catboard.v
   moving catboard.v --> iceriver/

iceriver/
├── build_iceriver.log
├── catboard.bin
├── catboard.blif
├── catboard.pcf
├── catboard.txt
├── catboard.v			created with myhdl
└── catboard.ys

/home/pi/rhea/examples/build/iceriver/catboard.pcf
# pin definitions 
set_io led[0] A9 
set_io led[1] B8 
set_io led[2] A7 
set_io led[3] B7 
set_io clock C8 

// File: catboard.v
// Generated by MyHDL 1.0dev
// Date: Wed Apr  4 14:42:23 2018


`timescale 1ns/10ps

module catboard (
    led,
    clock
);


output [3:0] led;
reg [3:0] led;
input clock;

reg reset;
reg toggle;
reg [26:0] cnt;



always @(posedge clock) begin: CATBOARD_RTL
    if (($signed({1'b0, cnt}) == (100000000 - 1))) begin
        cnt <= 0;
        toggle <= (!toggle);
    end
    else begin
        cnt <= (cnt + 1);
    end
end


always @(toggle) begin: CATBOARD_RTL_ASSIGN
    integer ii;
    led[0] = toggle;
    led[1] = (!toggle);
    for (ii=2; ii<4; ii=ii+1) begin
        led[ii] = 0;
    end
end


always @(posedge clock) begin: CATBOARD_RTL_RESET
    reset <= (!1'b0);
end

endmodule

/home/pi/rhea/examples/build/iceriver/catboard.ys
# -------------------------------------------------------------------------- #
# Autogenerated by rhea.build 
# -------------------------------------------------------------------------- #

read_verilog iceriver//catboard.v 
#set_location_assignment PIN_A9 -to "led[0]" 
#set_location_assignment PIN_B8 -to "led[1]" 
#set_location_assignment PIN_A7 -to "led[2]" 
#set_location_assignment PIN_B7 -to "led[3]" 
#set_location_assignment PIN_C8 -to "clock" 
#
# elaborate design hierarchy
hierarchy -check -top catboard

# high-level stuff
proc; opt; fsm; opt; memory; opt

# mapping to internal cell lib
techmap; opt
clean 
write_verilog iceriver//catboard_synth.v 
write_blif iceriver//catboard.blif


/home/pi/rhea/examples/build/iceriver/build_iceriver.log

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2018  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7+543 (git sha1 2b00c1db, clang 3.8.1-24+rpi1 -fPIC -Os)


-- Parsing `iceriver/catboard.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `iceriver/catboard.v' to AST representation.
Generating RTLIL representation for module `\catboard'.
Note: Assuming pure combinatorial block at iceriver/catboard.v:35 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -blif iceriver/catboard.blif' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   0 design levels: catboard            
Automatically selected catboard as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \catboard

2.2.3. Analyzing design hierarchy..
Top module:  \catboard
Removed 0 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.3.3. Executing PROC_INIT pass (extract init attributes).

2.3.4. Executing PROC_ARST pass (detect async resets in processes).

2.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\catboard.$proc$iceriver/catboard.v:45$9'.
     1/1: $0\reset[0:0]
Creating decoders for process `\catboard.$proc$iceriver/catboard.v:35$7'.
     1/4: $0\led[3:0] [3]
     2/4: $0\led[3:0] [2]
     3/4: $0\led[3:0] [1]
     4/4: $0\led[3:0] [0]
Creating decoders for process `\catboard.$proc$iceriver/catboard.v:24$3'.
     1/2: $0\cnt[26:0]
     2/2: $0\toggle[0:0]

2.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\catboard.\led' from process `\catboard.$proc$iceriver/catboard.v:35$7'.

2.3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\catboard.\reset' using process `\catboard.$proc$iceriver/catboard.v:45$9'.
  created $dff cell `$procdff$16' with positive edge clock.
Creating register for signal `\catboard.\toggle' using process `\catboard.$proc$iceriver/catboard.v:24$3'.
  created $dff cell `$procdff$17' with positive edge clock.
Creating register for signal `\catboard.\cnt' using process `\catboard.$proc$iceriver/catboard.v:24$3'.
  created $dff cell `$procdff$18' with positive edge clock.

2.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `catboard.$proc$iceriver/catboard.v:45$9'.
Removing empty process `catboard.$proc$iceriver/catboard.v:35$7'.
Found and cleaned up 1 empty switch in `\catboard.$proc$iceriver/catboard.v:24$3'.
Removing empty process `catboard.$proc$iceriver/catboard.v:24$3'.
Cleaned up 1 empty switch.

2.4. Executing FLATTEN pass (flatten design).
No more expansions possible.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing SYNTH pass.

2.7.1. Executing PROC pass (convert processes to netlists).

2.7.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.7.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.7.1.3. Executing PROC_INIT pass (extract init attributes).

2.7.1.4. Executing PROC_ARST pass (detect async resets in processes).

2.7.1.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.7.1.6. Executing PROC_DLATCH pass (convert process syncs to latches).

2.7.1.7. Executing PROC_DFF pass (convert process syncs to FFs).

2.7.1.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.7.2. Executing OPT_EXPR pass (perform const folding).

2.7.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
  removing unused `$dff' cell `$procdff$16'.
  removing unused non-port wire \CATBOARD_RTL_ASSIGN.ii.
  removing unused non-port wire \reset.
  removed 9 unused temporary wires.
Removed 1 unused cells and 9 unused wires.

2.7.4. Executing CHECK pass (checking for obvious problems).
checking module catboard..
found and reported 0 problems.

2.7.5. Executing OPT pass (performing simple optimizations).

2.7.5.1. Executing OPT_EXPR pass (perform const folding).

2.7.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
  Cell `$logic_not$iceriver/catboard.v:38$8' is identical to cell `$logic_not$iceriver/catboard.v:27$5'.
    Redirecting output \Y: \led [1] = $logic_not$iceriver/catboard.v:27$5_Y
    Removing $logic_not cell `$logic_not$iceriver/catboard.v:38$8' from module `\catboard'.
Removed a total of 1 cells.

2.7.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \catboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$11 (pure)
    Root of a mux tree: $procmux$14 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.7.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \catboard.
Performed a total of 0 changes.

2.7.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.7.5.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.7.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
  removed 1 unused temporary wires.
Removed 1 unused cells and 10 unused wires.

2.7.5.8. Executing OPT_EXPR pass (perform const folding).

2.7.5.9. Finished OPT passes. (There is nothing left to do.)

2.7.6. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell catboard.$add$iceriver/catboard.v:30$6 ($add).
Removed top 5 bits (of 32) from port Y of cell catboard.$add$iceriver/catboard.v:30$6 ($add).
Removed top 5 bits (of 32) from wire catboard.$add$iceriver/catboard.v:30$6_Y.

2.7.7. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module catboard:
  creating $macc model for $add$iceriver/catboard.v:30$6 ($add).
  creating $alu model for $macc $add$iceriver/catboard.v:30$6.
  creating $alu cell for $add$iceriver/catboard.v:30$6: $auto$alumacc.cc:474:replace_alu$20
  created 1 $alu and 0 $macc cells.

2.7.8. Executing SHARE pass (SAT-based resource sharing).

2.7.9. Executing OPT pass (performing simple optimizations).

2.7.9.1. Executing OPT_EXPR pass (perform const folding).

2.7.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.7.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \catboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$11 (pure)
    Root of a mux tree: $procmux$14 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.7.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \catboard.
Performed a total of 0 changes.

2.7.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.7.9.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.7.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
  removed 1 unused temporary wires.
Removed 1 unused cells and 11 unused wires.

2.7.9.8. Executing OPT_EXPR pass (perform const folding).

2.7.9.9. Finished OPT passes. (There is nothing left to do.)

2.7.10. Executing FSM pass (extract and optimize FSM).

2.7.10.1. Executing FSM_DETECT pass (finding FSMs in design).

2.7.10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.7.10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.7.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
Removed 1 unused cells and 11 unused wires.

2.7.10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.7.10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.7.10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.7.10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.7.11. Executing OPT pass (performing simple optimizations).

2.7.11.1. Executing OPT_EXPR pass (perform const folding).

2.7.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.7.11.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.7.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
Removed 1 unused cells and 11 unused wires.

2.7.11.5. Finished fast OPT passes.

2.7.12. Executing MEMORY pass.

2.7.12.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.7.12.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
Removed 1 unused cells and 11 unused wires.

2.7.12.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.7.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
Removed 1 unused cells and 11 unused wires.

2.7.12.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.7.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
Removed 1 unused cells and 11 unused wires.

2.8. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

2.9. Executing TECHMAP pass (map to technology primitives).

2.9.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.
No more expansions possible.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.10.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
Removed 1 unused cells and 11 unused wires.

2.10.5. Finished fast OPT passes.

2.11. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \catboard..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$11 (pure)
    Root of a mux tree: $procmux$14 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \catboard.
Performed a total of 0 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.12.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
Removed 1 unused cells and 11 unused wires.

2.12.8. Executing OPT_EXPR pass (perform const folding).

2.12.9. Finished OPT passes. (There is nothing left to do.)

2.13. Executing TECHMAP pass (map to technology primitives).

2.13.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.13.2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.
Mapping catboard.$eq$iceriver/catboard.v:25$4 ($eq) with simplemap.
Mapping catboard.$logic_not$iceriver/catboard.v:27$5 ($logic_not) with simplemap.
Mapping catboard.$procmux$11 ($mux) with simplemap.

2.13.3. Executing AST frontend in derive mode using pre-parsed AST for module `\_80_ice40_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 27
Parameter \Y_WIDTH = 27
Generating RTLIL representation for module `$paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=27\Y_WIDTH=27'.

2.13.4. Continuing TECHMAP pass.
Mapping catboard.$auto$alumacc.cc:474:replace_alu$20 using $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=27\Y_WIDTH=27.
Mapping catboard.$procmux$14 ($mux) with simplemap.
Mapping catboard.$procdff$17 ($dff) with simplemap.
Mapping catboard.$procdff$18 ($dff) with simplemap.
Mapping catboard.$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167 ($xor) with simplemap.
Mapping catboard.$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166 ($mux) with simplemap.
Mapping catboard.$techmap$auto$alumacc.cc:474:replace_alu$20.$not$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$165 ($not) with simplemap.
Mapping catboard.$auto$alumacc.cc:474:replace_alu$20.B_conv ($pos) with simplemap.
Mapping catboard.$auto$alumacc.cc:474:replace_alu$20.A_conv ($pos) with simplemap.
No more expansions possible.

2.14. Executing ICE40_OPT pass (performing simple optimizations).

2.14.1. Running ICE40 specific optimizations.

2.14.2. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$224' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [0] = \cnt [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$83' (?0) in module `\catboard' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$73 [8] = \cnt [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$84' (?0) in module `\catboard' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$73 [9] = \cnt [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$85' (?0) in module `\catboard' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$73 [10] = \cnt [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$86' (?0) in module `\catboard' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$73 [11] = \cnt [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$87' (?0) in module `\catboard' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$73 [12] = \cnt [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$92' (?0) in module `\catboard' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$73 [17] = \cnt [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$94' (?0) in module `\catboard' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$73 [19] = \cnt [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$100' (?0) in module `\catboard' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$73 [25] = \cnt [25]'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$138' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$139' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$140' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$141' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$142' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$143' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$144' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$145' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$146' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$147' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$148' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$149' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$150' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$151' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$152' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$153' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$154' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$155' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$156' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$157' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$158' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$159' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$160' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$161' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$162' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$163' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$164' in module `catboard'.
Optimizing away select inverter for $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$168' in module `catboard'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$225' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [1] = \cnt [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$198' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [1] = \cnt [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$226' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [2] = \cnt [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$199' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [2] = \cnt [2]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$227' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [3] = \cnt [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$200' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [3] = \cnt [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$228' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [4] = \cnt [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$201' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [4] = \cnt [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$229' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [5] = \cnt [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$202' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [5] = \cnt [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$230' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [6] = \cnt [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$203' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [6] = \cnt [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$231' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [7] = \cnt [7]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$204' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [7] = \cnt [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$232' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [8] = \cnt [8]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$205' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [8] = \cnt [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$233' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [9] = \cnt [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$206' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [9] = \cnt [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$234' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [10] = \cnt [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$207' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [10] = \cnt [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$235' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [11] = \cnt [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$208' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [11] = \cnt [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$236' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [12] = \cnt [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$209' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [12] = \cnt [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$237' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [13] = \cnt [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$210' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [13] = \cnt [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$238' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [14] = \cnt [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$211' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [14] = \cnt [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$239' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [15] = \cnt [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$212' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [15] = \cnt [15]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$240' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [16] = \cnt [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$213' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [16] = \cnt [16]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$241' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [17] = \cnt [17]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$214' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [17] = \cnt [17]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$242' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [18] = \cnt [18]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$215' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [18] = \cnt [18]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$243' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [19] = \cnt [19]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$216' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [19] = \cnt [19]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$244' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [20] = \cnt [20]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$217' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [20] = \cnt [20]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$245' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [21] = \cnt [21]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$218' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [21] = \cnt [21]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$246' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [22] = \cnt [22]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$219' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [22] = \cnt [22]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$247' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [23] = \cnt [23]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$220' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [23] = \cnt [23]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$248' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [24] = \cnt [24]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$221' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [24] = \cnt [24]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$249' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [25] = \cnt [25]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$222' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [25] = \cnt [25]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$250' (??0) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$ternary$/usr/local/bin/../share/yosys/ice40/arith_map.v:42$166_Y [26] = \cnt [26]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$223' (0?) in module `\catboard' with constant driver `$techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [26] = \cnt [26]'.

2.14.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$75' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$197'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$73 [0] = $techmap$auto$alumacc.cc:474:replace_alu$20.$xor$/usr/local/bin/../share/yosys/ice40/arith_map.v:68$167_Y [0]
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$75' from module `\catboard'.
Removed a total of 1 cells.

2.14.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.14.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
  removing unused `$_NOT_' cell `$auto$simplemap.cc:206:simplemap_lognot$136'.
  removing unused `\SB_CARRY' cell `$auto$alumacc.cc:474:replace_alu$20.slice[26].carry'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$251'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$252'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$253'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$254'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$255'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$256'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$257'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$258'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$259'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$260'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$261'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$262'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$263'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$264'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$265'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$266'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$267'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$268'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$269'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$270'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$271'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$272'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$273'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$274'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$275'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$276'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$277'.
  removed 18 unused temporary wires.
Removed 30 unused cells and 29 unused wires.

2.14.6. Rerunning OPT passes. (Removed registers in this run.)

2.14.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell catboard.$auto$alumacc.cc:474:replace_alu$20.slice[0].carry: CO=\cnt [0]
Mapping SB_LUT4 cell catboard.$auto$alumacc.cc:474:replace_alu$20.slice[1].adder back to logic.

2.14.8. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$286' (100) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$278 [7] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$285' (010) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$278 [6] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$291' (010) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$287 [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$284' (010) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$278 [5] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$283' (100) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$278 [4] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$290' (100) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$287 [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$282' (010) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$278 [3] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$281' (100) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$278 [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$289' (100) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$287 [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$280' (100) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$278 [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$279' (010) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$278 [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$288' (010) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$287 [0] = 1'0'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$293' (01?) in module `\catboard' with constant driver `$auto$simplemap.cc:309:simplemap_lut$292 [0] = \cnt [1]'.

2.14.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.14.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.14.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
  removed 3 unused temporary wires.
Removed 30 unused cells and 32 unused wires.

2.14.12. Rerunning OPT passes. (Removed registers in this run.)

2.14.13. Running ICE40 specific optimizations.

2.14.14. Executing OPT_EXPR pass (perform const folding).

2.14.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.14.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.14.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
Removed 30 unused cells and 32 unused wires.

2.14.18. Finished OPT passes. (There is nothing left to do.)

2.15. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.16. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module catboard:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$169 to $_DFFE_PP_ for $0\toggle[0:0] -> \toggle.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$171 to $_DFFE_PP_ for $0\cnt[26:0] [1] -> \cnt [1].

2.17. Executing TECHMAP pass (map to technology primitives).

2.17.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$169 using \$_DFFE_PP_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$170 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$171 using \$_DFFE_PP_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$172 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$173 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$174 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$175 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$176 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$177 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$178 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$179 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$180 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$181 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$182 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$183 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$184 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$185 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$186 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$187 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$188 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$189 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$190 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$191 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$192 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$193 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$194 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$195 using \$_DFF_P_.
Mapping catboard.$auto$simplemap.cc:420:simplemap_dff$196 using \$_DFF_P_.
No more expansions possible.

2.18. Executing OPT_EXPR pass (perform const folding).
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$307' (?0) in module `\catboard' with constant driver `$auto$simplemap.cc:250:simplemap_eqne$305 [0] = \cnt [0]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:311:simplemap_lut$296' (x??) in module `\catboard' with constant driver `$add$iceriver/catboard.v:30$6_Y [1] = $auto$simplemap.cc:309:simplemap_lut$292 [1]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$168' (?x?) in module `\catboard' with constant driver `$0\toggle[0:0] = \led [1]'.

2.19. Executing SIMPLEMAP pass (map simple cells to gate primitives).

2.20. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in catboard.

2.21. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in catboard.
  Merging $auto$simplemap.cc:277:simplemap_mux$164 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [26], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$196 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$138 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [0], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$170 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$139 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$292 [1], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$171 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$140 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [2], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$172 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$141 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [3], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$173 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$142 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [4], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$174 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$143 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [5], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$175 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$144 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [6], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$176 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$145 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [7], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$177 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$146 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [8], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$178 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$147 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [9], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$179 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$148 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [10], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$180 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$149 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [11], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$181 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$150 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [12], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$182 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$151 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [13], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$183 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$152 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [14], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$184 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$153 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [15], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$185 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$154 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [16], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$186 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$155 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [17], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$187 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$156 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [18], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$188 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$157 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [19], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$189 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$158 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [20], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$190 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$159 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [21], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$191 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$160 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [22], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$192 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$161 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [23], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$193 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$162 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [24], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$194 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$163 (A=1'0, B=$add$iceriver/catboard.v:30$6_Y [25], S=$auto$simplemap.cc:256:simplemap_eqne$102) into $auto$simplemap.cc:420:simplemap_dff$195 (SB_DFF).

2.22. Executing ICE40_OPT pass (performing simple optimizations).

2.22.1. Running ICE40 specific optimizations.

2.22.2. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$138' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$139' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$140' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$141' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$142' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$143' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$144' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$145' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$146' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$147' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$148' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$149' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$150' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$151' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$152' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$153' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$154' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$155' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$156' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$157' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$158' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$159' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$160' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$161' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$162' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$163' in module `catboard' with and-gate.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$164' in module `catboard' with and-gate.

2.22.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$400' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$401 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$400' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$398' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$399 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$398' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$396' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$397 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$396' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$394' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$395 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$394' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$392' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$393 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$392' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$390' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$391 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$390' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$388' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$389 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$388' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$386' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$387 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$386' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$384' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$385 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$384' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$382' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$383 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$382' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$380' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$381 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$380' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$378' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$379 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$378' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$376' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$377 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$376' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$374' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$375 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$374' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$372' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$373 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$372' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$370' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$371 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$370' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$368' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$369 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$368' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$366' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$367 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$366' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$364' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$365 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$364' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$362' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$363 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$362' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$360' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$361 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$360' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$358' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$359 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$358' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$356' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$357 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$356' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$354' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$355 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$354' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$352' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$353 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$352' from module `\catboard'.
  Cell `$auto$ice40_ffssr.cc:106:execute$350' is identical to cell `$auto$ice40_ffssr.cc:106:execute$402'.
    Redirecting output \Y: $auto$rtlil.cc:1804:NotGate$351 = $auto$rtlil.cc:1804:NotGate$403
    Removing $_NOT_ cell `$auto$ice40_ffssr.cc:106:execute$350' from module `\catboard'.
  Cell `$auto$simplemap.cc:85:simplemap_bitop$308' is identical to cell `$auto$simplemap.cc:85:simplemap_bitop$301'.
    Redirecting output \Y: $auto$simplemap.cc:250:simplemap_eqne$305 [1] = $auto$simplemap.cc:250:simplemap_eqne$299
    Removing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$308' from module `\catboard'.
Removed a total of 27 cells.

2.22.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$138'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$139'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$140'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$141'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$142'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$143'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$144'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$145'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$146'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$147'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$148'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$149'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$150'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$151'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$152'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$153'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$154'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$155'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$156'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$157'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$158'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$159'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$160'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$161'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$162'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$163'.
  removing unused `$_AND_' cell `$auto$simplemap.cc:277:simplemap_mux$164'.
  removed 118 unused temporary wires.
Removed 57 unused cells and 150 unused wires.

2.22.6. Rerunning OPT passes. (Removed registers in this run.)

2.22.7. Running ICE40 specific optimizations.

2.22.8. Executing OPT_EXPR pass (perform const folding).

2.22.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\catboard'.
Removed a total of 0 cells.

2.22.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \catboard..
Removed 57 unused cells and 150 unused wires.

2.22.12. Finished OPT passes. (There is nothing left to do.)

2.23. Executing TECHMAP pass (map to technology primitives).

2.23.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.
No more expansions possible.

2.24. Executing ABC pass (technology mapping using ABC).

2.24.1. Extracting gate netlist of module `\catboard' to `<abc-temp-dir>/input.blif'..
Extracted 50 gates and 79 wires to a netlist network with 28 inputs and 5 outputs.

2.24.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.24.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       26
ABC RESULTS:        internal signals:       46
ABC RESULTS:           input signals:       28
ABC RESULTS:          output signals:        5
Removing temp directory.
Removed 0 unused cells and 40 unused wires.

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.25.2. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0000000000000001
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0000000000000001'.

2.25.3. Continuing TECHMAP pass.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$410 using $paramod\$lut\WIDTH=4\LUT=16'0000000000000001.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$411 using $paramod\$lut\WIDTH=4\LUT=16'0000000000000001.

2.25.4. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1000000000000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1000000000000000'.

2.25.5. Continuing TECHMAP pass.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$413 using $paramod\$lut\WIDTH=4\LUT=16'1000000000000000.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$412 using $paramod\$lut\WIDTH=4\LUT=16'1000000000000000.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$409 using $paramod\$lut\WIDTH=4\LUT=16'1000000000000000.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$416 using $paramod\$lut\WIDTH=4\LUT=16'1000000000000000.

2.25.6. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'10000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'10000000'.

2.25.7. Continuing TECHMAP pass.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$414 using $paramod\$lut\WIDTH=3\LUT=8'10000000.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$415 using $paramod\$lut\WIDTH=4\LUT=16'1000000000000000.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$419 using $paramod\$lut\WIDTH=4\LUT=16'1000000000000000.

2.25.8. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 1
Parameter \LUT = 2'01
Generating RTLIL representation for module `$paramod\$lut\WIDTH=1\LUT=2'01'.

2.25.9. Continuing TECHMAP pass.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$418 using $paramod\$lut\WIDTH=1\LUT=2'01.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$417 using $paramod\$lut\WIDTH=1\LUT=2'01.
Mapping catboard.$abc$407$auto$blifparse.cc:465:parse_blif$408 using $paramod\$lut\WIDTH=4\LUT=16'1000000000000000.
No more expansions possible.
Removed 0 unused cells and 24 unused wires.

2.26. Executing HIERARCHY pass (managing design hierarchy).

2.26.1. Analyzing design hierarchy..
Top module:  \catboard

2.26.2. Analyzing design hierarchy..
Top module:  \catboard
Removed 0 unused modules.

2.26.3. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1000000000000000
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1000000000000000'.

2.26.4. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1000000000000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1000000000000000'.

2.26.5. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0000000000000001
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0000000000000001'.

2.26.6. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0000000000000001
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0000000000000001'.

2.26.7. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1000000000000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1000000000000000'.

2.26.8. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1000000000000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1000000000000000'.

2.26.9. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 8'10000000
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=8'10000000'.

2.26.10. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1000000000000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1000000000000000'.

2.26.11. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1000000000000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1000000000000000'.

2.26.12. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 2'01
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=2'01'.

2.26.13. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 2'01
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=2'01'.

2.26.14. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'1000000000000000
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'1000000000000000'.

2.26.15. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Generating RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.16. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.17. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.18. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.19. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.20. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.21. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.22. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.23. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.24. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.25. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.26. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.27. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.28. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.29. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.30. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.31. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.32. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.33. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.34. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.35. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.36. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.37. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.38. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.39. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.26.40. Executing AST frontend in derive mode using pre-parsed AST for module `\SB_LUT4'.
Parameter \LUT_INIT = 16'0110100110010110
Found cached RTLIL representation for module `$paramod\SB_LUT4\LUT_INIT=16'0110100110010110'.

2.27. Printing statistics.

=== catboard ===

   Number of wires:                 17
   Number of wire bits:             98
   Number of public wires:           4
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 91
     SB_CARRY                       25
     SB_DFFE                         1
     SB_DFFESR                       1
     SB_DFFSR                       26
     SB_LUT4                        38

2.28. Executing CHECK pass (checking for obvious problems).
checking module catboard..
found and reported 0 problems.

2.29. Executing BLIF backend.

End of script. Logfile hash: 2388eef01b
CPU: user 2.16s system 0.06s, MEM: 16.56 MB total, 11.19 MB resident
Yosys 0.7+543 (git sha1 2b00c1db, clang 3.8.1-24+rpi1 -fPIC -Os)
Time spent: 44% 9x read_verilog (0 sec), 13% 1x share (0 sec), ...
seed: 1
device: 8k
read_chipdb +/share/arachne-pnr/chipdb-8k.bin...
  supported packages: cb132, cb132:4k, cm121, cm121:4k, cm225, cm225:4k, cm81, cm81:4k, ct256, tq144:4k
read_blif iceriver/catboard.blif...
prune...
read_pcf iceriver/catboard.pcf...
instantiate_io...
pack...

After packing:
IOs          5 / 206
GBs          0 / 8
  GB_IOs     0 / 8
LCs          41 / 7680
  DFF        4
  CARRY      2
  CARRY, DFF 24
  DFF PASS   1
  CARRY PASS 1
BRAMs        0 / 32
WARMBOOTs    0 / 1
PLLs         0 / 2

place_constraints...
promote_globals...
  promoted clock$2, 28 / 28
  promoted $abc$407$n1, 27 / 27
  promoted 2 nets
    1 sr/we
    1 clk
  2 globals
    1 sr/we
    1 clk
realize_constants...
  realized 1
place...
  initial wire length = 1792
  at iteration #50: temp = 30.8172, wire length = 439
  at iteration #100: temp = 14.2774, wire length = 403
  at iteration #150: temp = 5.38761, wire length = 237
  at iteration #200: temp = 2.03303, wire length = 81
  at iteration #250: temp = 0.00429091, wire length = 66
  final wire length = 66

After placement:
PIOs       6 / 206
PLBs       12 / 960
BRAMs      0 / 32

  place time 0.59s
route...
  pass 1, 0 shared.

After routing:
span_4     19 / 29696
span_12    1 / 5632

  route time 0.49s
write_txt iceriver/catboard.txt...

pipi2-2:~/catboard_yosys $ sudo ./config_cat example2/catboard.bin
 
GPIO 25 not exported, trying to export...
GPIO 17 not exported, trying to export...
GPIO 22 not exported, trying to export...

OK: SPI driver loaded

Setting GPIO directions
out
out
in
Setting output to low
0
Reseting FPGA
0
1
Checking DONE pin
0
Continuing with configuration procedure
263+1 records in
263+1 records out
135100 bytes (135 kB, 132 KiB) copied, 0.0406513 s, 3.3 MB/s
Setting output to high
1
Checking DONE pin
1
