// File: buttons_display.v
// Generated by MyHDL 1.0dev
// Date: Tue Apr 10 20:56:19 2018


`timescale 1ns/10ps

module buttons_display (
    d0_o,
    d1_o,
    d2_o,
    d3_o,
    d4_o,
    d5_o,
    d6_o,
    d7_o,
    clk_i,
    sw1_i,
    sw2_i,
    sw3_i
);
// Module for testing buttons and DIP switches.
// d0_o, ... d7_o: 3-state outputs to drive the StickIt! LEDDigits board.
// clk_i: Input clock.
// sw1_i, sw2_i: Pushbutton inputs.
// sw3_i: DIP switch input (4 bits).

output d0_o;
wire d0_o;
output d1_o;
wire d1_o;
output d2_o;
wire d2_o;
output d3_o;
wire d3_o;
output d4_o;
wire d4_o;
output d5_o;
wire d5_o;
output d6_o;
wire d6_o;
output d7_o;
wire d7_o;
input clk_i;
output sw1_i;
wire sw1_i;
output sw2_i;
wire sw2_i;
output [3:0] sw3_i;
wire [3:0] sw3_i;

reg [6:0] sw2_digit;
reg [6:0] sw1_digit;
wire sw1;
wire [3:0] sw3;
wire sw2;
reg [2:0] display_seg_cntr;
reg display_blank;
reg display_initialized;
reg [7:0] display_digit_shf;
reg [6:0] display_segments;
reg [6:0] display_seg_mask;
reg [7:0] display_drvr_enbls;
wire [55:0] display_digit_all_i;
reg [6:0] display_active_digit;
reg [9:0] display_seg_timer;
wire [6:0] display_active_segments;
wire drvrs [0:8-1];

assign display_digit_all_i = 56'd0;
assign d6 = d6_o;
assign d7 = d7_o;
assign d4 = d4_o;
assign d5 = d5_o;
assign d2 = d2_o;
assign d3 = d3_o;
assign d0 = d0_o;
assign d1 = d1_o;
assign drvrs[7] = display_inst_8_o_drvr;
assign drvrs[0] = display_inst_1_o_drvr;
assign drvrs[5] = display_inst_6_o_drvr;
assign drvrs[6] = display_inst_7_o_drvr;
assign drvrs[2] = display_inst_3_o_drvr;
assign drvrs[3] = display_inst_4_o_drvr;
assign drvrs[1] = display_inst_2_o_drvr;
assign drvrs[4] = display_inst_5_o_drvr;



SB_IO #(
  .PIN_TYPE(6'b000001),
  .PULLUP(1'b1)
) input_pin_6 [3:0] (
  .PACKAGE_PIN(sw3_i),
  .D_IN_0(sw3)
);


always @(sw1, sw3, sw2) begin: BUTTONS_DISPLAY_SW_LOGIC
    if ((sw1 == 1)) begin
        sw1_digit[4-1:0] = sw3;
        sw1_digit[7-1:4] = 0;
    end
    else begin
        sw1_digit[7-1:0] = 32;
    end
    if ((sw2 == 1)) begin
        sw2_digit[4-1:0] = sw3;
        sw2_digit[7-1:4] = 0;
    end
    else begin
        sw2_digit[7-1:0] = 32;
    end
end



SB_IO #(
  .PIN_TYPE(6'b000001),
  .PULLUP(1'b1)
) input_pin_5  (
  .PACKAGE_PIN(sw2_i),
  .D_IN_0(sw2)
);



SB_IO #(
  .PIN_TYPE(6'b000001),
  .PULLUP(1'b1)
) input_pin_4  (
  .PACKAGE_PIN(sw1_i),
  .D_IN_0(sw1)
);



assign d0_o = drvrs[0];
assign d1_o = drvrs[1];
assign d2_o = drvrs[2];
assign d3_o = drvrs[3];
assign d4_o = drvrs[4];
assign d5_o = drvrs[5];
assign d6_o = drvrs[6];
assign d7_o = drvrs[7];


always @(display_digit_shf, display_active_segments, display_blank) begin: BUTTONS_DISPLAY_DISPLAY_COMBINE_DRIVERS
    if ((display_blank == 1'b1)) begin
        display_drvr_enbls = 0;
    end
    else if ((display_digit_shf[0] == 1)) begin
        display_drvr_enbls[8-1:1] = display_active_segments[7-1:0];
        display_drvr_enbls[0] = 1;
    end
    else if ((display_digit_shf[1] == 1)) begin
        display_drvr_enbls[8-1:2] = display_active_segments[7-1:1];
        display_drvr_enbls[1] = 1;
        display_drvr_enbls[0] = display_active_segments[1-1:0];
    end
    else if ((display_digit_shf[2] == 1)) begin
        display_drvr_enbls[8-1:3] = display_active_segments[7-1:2];
        display_drvr_enbls[2] = 1;
        display_drvr_enbls[2-1:0] = display_active_segments[2-1:0];
    end
    else if ((display_digit_shf[3] == 1)) begin
        display_drvr_enbls[8-1:4] = display_active_segments[7-1:3];
        display_drvr_enbls[3] = 1;
        display_drvr_enbls[3-1:0] = display_active_segments[3-1:0];
    end
    else if ((display_digit_shf[4] == 1)) begin
        display_drvr_enbls[8-1:5] = display_active_segments[7-1:4];
        display_drvr_enbls[4] = 1;
        display_drvr_enbls[4-1:0] = display_active_segments[4-1:0];
    end
    else if ((display_digit_shf[5] == 1)) begin
        display_drvr_enbls[8-1:6] = display_active_segments[7-1:5];
        display_drvr_enbls[5] = 1;
        display_drvr_enbls[5-1:0] = display_active_segments[5-1:0];
    end
    else if ((display_digit_shf[6] == 1)) begin
        display_drvr_enbls[8-1:7] = display_active_segments[7-1:6];
        display_drvr_enbls[6] = 1;
        display_drvr_enbls[6-1:0] = display_active_segments[6-1:0];
    end
    else if ((display_digit_shf[7] == 1)) begin
        display_drvr_enbls[7] = 1;
        display_drvr_enbls[7-1:0] = display_active_segments[7-1:0];
    end
    else begin
        display_drvr_enbls = 0;
    end
end



assign display_active_segments = (display_segments & display_seg_mask);


always @(sw1_digit, sw2_digit, display_digit_shf, display_digit_all_i) begin: BUTTONS_DISPLAY_DISPLAY_GET_ACTIVE_DIGIT
    if ((display_digit_shf[0] == 1)) begin
        display_active_digit = (sw1_digit | display_digit_all_i[7-1:0]);
    end
    else if ((display_digit_shf[1] == 1)) begin
        display_active_digit = (32 | display_digit_all_i[14-1:7]);
    end
    else if ((display_digit_shf[2] == 1)) begin
        display_active_digit = (32 | display_digit_all_i[21-1:14]);
    end
    else if ((display_digit_shf[3] == 1)) begin
        display_active_digit = (32 | display_digit_all_i[28-1:21]);
    end
    else if ((display_digit_shf[4] == 1)) begin
        display_active_digit = (32 | display_digit_all_i[35-1:28]);
    end
    else if ((display_digit_shf[5] == 1)) begin
        display_active_digit = (32 | display_digit_all_i[42-1:35]);
    end
    else if ((display_digit_shf[6] == 1)) begin
        display_active_digit = (32 | display_digit_all_i[49-1:42]);
    end
    else if ((display_digit_shf[7] == 1)) begin
        display_active_digit = (sw2_digit | display_digit_all_i[56-1:49]);
    end
    else begin
        display_active_digit = 0;
    end
end


always @(display_active_digit) begin: BUTTONS_DISPLAY_DISPLAY_INST_0_LOGIC
    if ((display_active_digit == 32)) begin
        display_segments = 7'b0000000;
    end
    else if ((display_active_digit == 45)) begin
        display_segments = 7'b1000000;
    end
    else if (((display_active_digit == 0) || (display_active_digit == 48))) begin
        display_segments = 7'b0111111;
    end
    else if (((display_active_digit == 1) || (display_active_digit == 49))) begin
        display_segments = 7'b0000110;
    end
    else if (((display_active_digit == 2) || (display_active_digit == 50))) begin
        display_segments = 7'b1011011;
    end
    else if (((display_active_digit == 3) || (display_active_digit == 51))) begin
        display_segments = 7'b1001111;
    end
    else if (((display_active_digit == 4) || (display_active_digit == 52))) begin
        display_segments = 7'b1100110;
    end
    else if (((display_active_digit == 5) || (display_active_digit == 53))) begin
        display_segments = 7'b1101101;
    end
    else if (((display_active_digit == 6) || (display_active_digit == 54))) begin
        display_segments = 7'b1111101;
    end
    else if (((display_active_digit == 7) || (display_active_digit == 55))) begin
        display_segments = 7'b0000111;
    end
    else if (((display_active_digit == 8) || (display_active_digit == 56))) begin
        display_segments = 7'b1111111;
    end
    else if (((display_active_digit == 9) || (display_active_digit == 57))) begin
        display_segments = 7'b1101111;
    end
    else if (((display_active_digit == 10) || (display_active_digit == 65) || (display_active_digit == 97))) begin
        display_segments = 7'b1110111;
    end
    else if (((display_active_digit == 11) || (display_active_digit == 66) || (display_active_digit == 98))) begin
        display_segments = 7'b1111100;
    end
    else if (((display_active_digit == 12) || (display_active_digit == 67) || (display_active_digit == 99))) begin
        display_segments = 7'b0111001;
    end
    else if (((display_active_digit == 13) || (display_active_digit == 68) || (display_active_digit == 100))) begin
        display_segments = 7'b1011110;
    end
    else if (((display_active_digit == 14) || (display_active_digit == 69) || (display_active_digit == 101))) begin
        display_segments = 7'b1111001;
    end
    else if (((display_active_digit == 15) || (display_active_digit == 70) || (display_active_digit == 102))) begin
        display_segments = 7'b1110001;
    end
    else if (((display_active_digit == 71) || (display_active_digit == 103))) begin
        display_segments = 7'b0111101;
    end
    else if (((display_active_digit == 72) || (display_active_digit == 104))) begin
        display_segments = 7'b1110100;
    end
    else if (((display_active_digit == 73) || (display_active_digit == 105))) begin
        display_segments = 7'b0110000;
    end
    else if (((display_active_digit == 74) || (display_active_digit == 106))) begin
        display_segments = 7'b0011110;
    end
    else if (((display_active_digit == 75) || (display_active_digit == 107))) begin
        display_segments = 7'b0001000;
    end
    else if (((display_active_digit == 76) || (display_active_digit == 108))) begin
        display_segments = 7'b0111000;
    end
    else if (((display_active_digit == 77) || (display_active_digit == 109))) begin
        display_segments = 7'b0001000;
    end
    else if (((display_active_digit == 78) || (display_active_digit == 110))) begin
        display_segments = 7'b1010100;
    end
    else if (((display_active_digit == 79) || (display_active_digit == 111))) begin
        display_segments = 7'b1011100;
    end
    else if (((display_active_digit == 80) || (display_active_digit == 112))) begin
        display_segments = 7'b1110011;
    end
    else if (((display_active_digit == 81) || (display_active_digit == 113))) begin
        display_segments = 7'b0001000;
    end
    else if (((display_active_digit == 82) || (display_active_digit == 114))) begin
        display_segments = 7'b1010000;
    end
    else if (((display_active_digit == 83) || (display_active_digit == 115))) begin
        display_segments = 7'b1101101;
    end
    else if (((display_active_digit == 84) || (display_active_digit == 116))) begin
        display_segments = 7'b1111000;
    end
    else if (((display_active_digit == 85) || (display_active_digit == 117))) begin
        display_segments = 7'b0011100;
    end
    else if (((display_active_digit == 86) || (display_active_digit == 118))) begin
        display_segments = 7'b0001000;
    end
    else if (((display_active_digit == 87) || (display_active_digit == 119))) begin
        display_segments = 7'b0001000;
    end
    else if (((display_active_digit == 88) || (display_active_digit == 120))) begin
        display_segments = 7'b0001000;
    end
    else if (((display_active_digit == 89) || (display_active_digit == 121))) begin
        display_segments = 7'b1101110;
    end
    else if (((display_active_digit == 90) || (display_active_digit == 122))) begin
        display_segments = 7'b0001000;
    end
    else if ((display_active_digit == 95)) begin
        display_segments = 7'b0001000;
    end
    else begin
        display_segments = 7'b0001000;
    end
end



assign display_inst_1_dummy = (drvrs[0] != 0);


always @(display_digit_shf[0], display_drvr_enbls[0]) begin: BUTTONS_DISPLAY_DISPLAY_INST_1_DRVR_LOGIC
    if ((display_drvr_enbls[0] == 1)) begin
        display_inst_1_o_drvr = display_digit_shf[0];
    end
    else begin
        display_inst_1_o_drvr = 'bz;
    end
end



assign display_inst_2_dummy = (drvrs[1] != 0);


always @(display_digit_shf[1], display_drvr_enbls[1]) begin: BUTTONS_DISPLAY_DISPLAY_INST_2_DRVR_LOGIC
    if ((display_drvr_enbls[1] == 1)) begin
        display_inst_2_o_drvr = display_digit_shf[1];
    end
    else begin
        display_inst_2_o_drvr = 'bz;
    end
end



assign display_inst_3_dummy = (drvrs[2] != 0);


always @(display_digit_shf[2], display_drvr_enbls[2]) begin: BUTTONS_DISPLAY_DISPLAY_INST_3_DRVR_LOGIC
    if ((display_drvr_enbls[2] == 1)) begin
        display_inst_3_o_drvr = display_digit_shf[2];
    end
    else begin
        display_inst_3_o_drvr = 'bz;
    end
end



assign display_inst_4_dummy = (drvrs[3] != 0);


always @(display_digit_shf[3], display_drvr_enbls[3]) begin: BUTTONS_DISPLAY_DISPLAY_INST_4_DRVR_LOGIC
    if ((display_drvr_enbls[3] == 1)) begin
        display_inst_4_o_drvr = display_digit_shf[3];
    end
    else begin
        display_inst_4_o_drvr = 'bz;
    end
end



assign display_inst_5_dummy = (drvrs[4] != 0);


always @(display_digit_shf[4], display_drvr_enbls[4]) begin: BUTTONS_DISPLAY_DISPLAY_INST_5_DRVR_LOGIC
    if ((display_drvr_enbls[4] == 1)) begin
        display_inst_5_o_drvr = display_digit_shf[4];
    end
    else begin
        display_inst_5_o_drvr = 'bz;
    end
end



assign display_inst_6_dummy = (drvrs[5] != 0);


always @(display_digit_shf[5], display_drvr_enbls[5]) begin: BUTTONS_DISPLAY_DISPLAY_INST_6_DRVR_LOGIC
    if ((display_drvr_enbls[5] == 1)) begin
        display_inst_6_o_drvr = display_digit_shf[5];
    end
    else begin
        display_inst_6_o_drvr = 'bz;
    end
end



assign display_inst_7_dummy = (drvrs[6] != 0);


always @(display_digit_shf[6], display_drvr_enbls[6]) begin: BUTTONS_DISPLAY_DISPLAY_INST_7_DRVR_LOGIC
    if ((display_drvr_enbls[6] == 1)) begin
        display_inst_7_o_drvr = display_digit_shf[6];
    end
    else begin
        display_inst_7_o_drvr = 'bz;
    end
end



assign display_inst_8_dummy = (drvrs[7] != 0);


always @(display_digit_shf[7], display_drvr_enbls[7]) begin: BUTTONS_DISPLAY_DISPLAY_INST_8_DRVR_LOGIC
    if ((display_drvr_enbls[7] == 1)) begin
        display_inst_8_o_drvr = display_digit_shf[7];
    end
    else begin
        display_inst_8_o_drvr = 'bz;
    end
end


always @(posedge clk_i) begin: BUTTONS_DISPLAY_DISPLAY_SCAN_SEGMENTS_AND_DIGITS
    if ((display_initialized != 1'b1)) begin
        display_seg_mask <= 7'b0010101;
        display_digit_shf <= 8'b00000001;
        display_initialized <= (!display_initialized);
    end
    else if ((display_seg_timer == 0)) begin
        display_seg_timer <= (597 - 1);
        display_seg_mask[7-1:1] <= display_seg_mask[6-1:0];
        display_seg_mask[0] <= display_seg_mask[6];
        display_blank <= (display_seg_cntr == 1);
        if ((display_seg_cntr == 0)) begin
            display_digit_shf[8-1:1] <= display_digit_shf[7-1:0];
            display_digit_shf[0] <= display_digit_shf[7];
            display_seg_cntr <= (7 - 1);
        end
        else begin
            display_seg_cntr <= (display_seg_cntr - 1);
        end
    end
    else begin
        display_seg_timer <= (display_seg_timer - 1);
    end
end

endmodule
